[{"/Users/Reggie/Projects/chill-vibes/src/index.js":"1","/Users/Reggie/Projects/chill-vibes/src/reportWebVitals.js":"2","/Users/Reggie/Projects/chill-vibes/src/App.js":"3","/Users/Reggie/Projects/chill-vibes/src/util.js":"4","/Users/Reggie/Projects/chill-vibes/src/components/Song.js":"5","/Users/Reggie/Projects/chill-vibes/src/components/Player.js":"6"},{"size":478,"mtime":1613879257026,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1613878802803,"results":"9","hashOfConfig":"8"},{"size":721,"mtime":1613892693478,"results":"10","hashOfConfig":"8"},{"size":3511,"mtime":1613889411201,"results":"11","hashOfConfig":"8"},{"size":306,"mtime":1613928477406,"results":"12","hashOfConfig":"8"},{"size":2094,"mtime":1613928797562,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5yxo4t",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Reggie/Projects/chill-vibes/src/index.js",[],"/Users/Reggie/Projects/chill-vibes/src/reportWebVitals.js",[],"/Users/Reggie/Projects/chill-vibes/src/App.js",["27"],"import {useState} from 'react';\n// import styles\nimport './styles/App.scss';\n// Adding components\nimport Player from './components/Player';\nimport Song from './components/Song';\n// Import util\nimport data from './util';\n\nfunction App() {\n  // State\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  return (\n    <div className=\"App\">\n      {/* <h1>Chill Vibes Music</h1> */}\n      <Song currentSong={currentSong} setCurrentSong={setCurrentSong} />\n      <Player\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/Reggie/Projects/chill-vibes/src/util.js",[],"/Users/Reggie/Projects/chill-vibes/src/components/Song.js",[],"/Users/Reggie/Projects/chill-vibes/src/components/Player.js",[],{"ruleId":"28","severity":1,"message":"29","line":12,"column":17,"nodeType":"30","messageId":"31","endLine":12,"endColumn":25},"no-unused-vars","'setSongs' is assigned a value but never used.","Identifier","unusedVar"]