{"ast":null,"code":"var _jsxFileName = \"/Users/Reggie/Projects/chill-vibes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react'; // import styles\n\nimport './styles/App.scss'; // Adding components\n\nimport Player from './components/Player';\nimport Song from './components/Song';\nimport Library from './components/Library'; // Import util\n\nimport data from './util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Ref\n  const audioRef = useRef(null);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0\n  }); // State\n\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Song, {\n      currentSong: currentSong,\n      setCurrentSong: setCurrentSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Player, {\n      audioRef: audioRef,\n      isPlaying: isPlaying,\n      setIsPlaying: setIsPlaying,\n      currentSong: currentSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Library, {\n      setCurrentSong: setCurrentSong,\n      songs: songs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      onTimeUpdate: timeUpdateHandler,\n      ref: audioRef,\n      src: currentSong.audio,\n      onLoadedMetadata: timeUpdateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"BBOoXxvv11eMjPDBxBA2ZC8lcRk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Reggie/Projects/chill-vibes/src/App.js"],"names":["useState","useRef","Player","Song","Library","data","App","audioRef","songInfo","setSongInfo","currentTime","duration","songs","setSongs","currentSong","setCurrentSong","isPlaying","setIsPlaying","timeUpdateHandler","audio"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,MAAlB,QAA+B,OAA/B,C,CACA;;AACA,OAAO,mBAAP,C,CACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX;AACA,QAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAD,CAAvB;AACF,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC;AACvCU,IAAAA,WAAW,EAAE,CAD0B;AAEvCC,IAAAA,QAAQ,EAAE;AAF6B,GAAD,CAAxC,CAHa,CAOb;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAACK,IAAI,EAAL,CAAlC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAACY,KAAK,CAAC,CAAD,CAAN,CAA9C;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,KAAD,CAA1C;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEE,QAAC,IAAD;AAAM,MAAA,WAAW,EAAEc,WAAnB;AAAgC,MAAA,cAAc,EAAEC;AAAhD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AACE,MAAA,QAAQ,EAAER,QADZ;AAEE,MAAA,SAAS,EAAES,SAFb;AAGE,MAAA,YAAY,EAAEC,YAHhB;AAIE,MAAA,WAAW,EAAEH;AAJf;AAAA;AAAA;AAAA;AAAA,YAHF,eASE,QAAC,OAAD;AAAS,MAAA,cAAc,EAAEC,cAAzB;AAAyC,MAAA,KAAK,EAAEH;AAAhD;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AACE,MAAA,YAAY,EAAEM,iBADhB;AAEE,MAAA,GAAG,EAAEX,QAFP;AAGE,MAAA,GAAG,EAAEO,WAAW,CAACK,KAHnB;AAIE,MAAA,gBAAgB,EAAED;AAJpB;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA9BQZ,G;;KAAAA,G;AAgCT,eAAeA,GAAf","sourcesContent":["import {useState, useRef} from 'react';\n// import styles\nimport './styles/App.scss';\n// Adding components\nimport Player from './components/Player';\nimport Song from './components/Song';\nimport Library from './components/Library';\n// Import util\nimport data from './util';\n\nfunction App() {\n    // Ref\n    const audioRef = useRef(null);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n  });\n  // State\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  return (\n    <div className=\"App\">\n      {/* <h1>Chill Vibes Music</h1> */}\n      <Song currentSong={currentSong} setCurrentSong={setCurrentSong} />\n      <Player\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n      />\n      <Library setCurrentSong={setCurrentSong} songs={songs} />\n      <audio\n        onTimeUpdate={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onLoadedMetadata={timeUpdateHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}